{% extends "base.html.twig" %}

{% block body %}

    <h1>view one</h1>



</br>
    Titre : {{ oneTricks.title }}
</br>
    Rédigé par : {{ oneTricks.author }} le : {{ oneTricks.dateAjout|date('d/m/Y à H:i') }}
</br>
    Content : {{ oneTricks.content }}
</br>
    Catégorie : {{ oneTricks.category.name }}
</br>
<h2>Video</h2>
    <ul>
        {% for video in listVideo %}
            <li>
                Video Url : {{ video.link }}
            </li>
            <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->
            <div id="player"></div>

            <script>
                // 2. This code loads the IFrame Player API code asynchronously.
                var tag = document.createElement('script');

                tag.src = "https://www.youtube.com/iframe_api";
                var firstScriptTag = document.getElementsByTagName('script')[0];
                firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

                // 3. This function creates an <iframe> (and YouTube player)
                //    after the API code downloads.
                var player;
                function onYouTubeIframeAPIReady() {
                    player = new YT.Player('player', {
                        height: '360',
                        width: '640',
                        videoId: 'X9DIG3Ux79E',
                        events: {
                            'onReady': onPlayerReady,
                            'onStateChange': onPlayerStateChange
                        }
                    });
                }

                // 4. The API will call this function when the video player is ready.
                function onPlayerReady(event) {
                    event.target.playVideo();
                }

                // 5. The API calls this function when the player's state changes.
                //    The function indicates that when playing a video (state=1),
                //    the player should play for six seconds and then stop.
                var done = false;
                function onPlayerStateChange(event) {
                    if (event.data == YT.PlayerState.PLAYING && !done) {
                        setTimeout(stopVideo, 6000);
                        done = true;
                    }
                }
                function stopVideo() {
                    player.stopVideo();
                }
            </script>

        {% endfor %}
    </ul>


<br>
<a href="{{ path('tricks_homepage') }}" class="btn btn-default" ><i class="glyphicon glyphicon-chevron-left"></i>Retour</a>
<a href="{{ path('tricks_edit', { 'id' : oneTricks.id} ) }}" class="btn btn-primary" >Modifier</a>
<a href="{{ path('tricks_delete', { 'id' : oneTricks.id} ) }}" class="btn btn-danger" >Supprimer</a>

<h2>Commentaire</h2>
    {% include 'TricksBundle:form:commentForm.html.twig' %}
</br>
<ul>
    {% for comment in listComment %}
        <li>
            Rédigé par : {{ comment.author }} le : {{ comment.dateAjout|date('d/m/Y à H:i') }}
            </br>
            {{ comment.content }}
        </li>
    {% endfor %}
</ul>

{% endblock %}